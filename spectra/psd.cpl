! This program computes the power spectral density 
! and cross spectral density of:
!     (uu, vv, ww, uv, vw, uw)
!
! Data is then saved to a binary file ('psd.bin');
! it is structure so that it corresponds to an array
! of double precision floating point (64 bits), whose
! indices are:
!     (i_component, i_y, i_z, i_x)
! with C-like ordering.
!
! This structure is purposely chosen, so that:
! - the first index is the component of the Reynolds
!   stress tensor; so, each component is saved as a 
!   contiguous portion of memory. This makes sense,
!   since usually one wants to access one component at
!   a time;
! - the second index corresponds to the wall normal 
!   coordinate - so, if one specifies the y, a contiguous
!   portion of memory representing the spectrum for that
!   y is found;
! - the last index corresponds to the k_x modes; this makes
!   it fast to sum up all the k_x modes to obtain the y-k_z
!   cumulative spectra, which is somewhat more common than
!   the y-k_x one.
!
! This program IS parallel



gamma=0
outinterv=0
USE ../dnsdata
USE ../dnsdirect
!USE rtchecks
USE ../tke/convenience.cpl

! Parameters
! -----------------------------
INTEGER nfmin,nfmax,dn
nfmin=atoi(COMMANDLINE(4))
nfmax=atoi(COMMANDLINE(5))
dn=atoi(COMMANDLINE(6))
!------------------------------
nftot=[(nfmax-nfmin) DIV dn]+1

! Definitions
MEANTERMS = STRUCTURE(REAL U,W)

! Array declarations
ARRAY(1..6,nyl-2..nyh+2,-nz..nz,0..nx) OF REAL psd=0
ARRAY(nyl-2..nyh+2) OF MEANTERMS meandata=0
POINTER TO STORED STRUCTURE[
        ARRAY(1..6,-1..ny+1,-nz..nz,0..nx) OF REAL psd_image
] psd_file

! Compute the average field
LOOP FOR n=nfmin TO nfmax
  STRING field_name = WRITE('Field'n'.fld')
  IF NOT first THEN READ FROM prev
  diskfield=OPEN(field_name)
  WITH diskfield,meandata(*):
    U=~+uavimage(nyl-2..nyh+2)
    W=~+wavimage(nyl-2..nyh+2)
  CLOSE diskfield
  IF NOT last THEN WRITE TO next
REPEAT 
DO WITH meandata(iy): U=U/nftot; W=W/nftot; FOR ALL iy 

! Main loop on files
LOOP files FOR n=nfmin TO nfmax
    ! Read field
    STRING field_name = WRITE('Field'n'.fld')
    read_field_parallel(field_name)
    WITH V(0,0,*),meandata(*): u=~-U; w=~-W
    ! Compute PSD and CSD
    IF has_terminal THEN WRITE "Computing PSD and CSD"
    DO
      DO WITH V(ix,iz,iy): psd(1,iy,iz,ix)=~+2*NORM[u]; psd(2,iy,iz,ix)=~+2*NORM[v]; psd(3,iy,iz,ix)=~+2*NORM[w]; psd(4,iy,iz,ix)=~+2*[u|v].REAL; psd(5,iy,iz,ix)=~+2*[u|w].REAL; psd(6,iy,iz,ix)=~+2*[v|w].REAL FOR ix=1 TO nx
         WITH V(0,iz,iy):  psd(1,iy,iz,0) =~+  NORM[u]; psd(2,iy,iz,0) =~+  NORM[v]; psd(3,iy,iz,0) =~+  NORM[w]; psd(4,iy,iz,0) =~+  [u|v].REAL; psd(5,iy,iz,0) =~+  [u|w].REAL; psd(6,iy,iz,0) =~+  [v|w].REAL
    FOR ALL iy,iz 
REPEAT files
! TODO: scrivi direttamente in kx, kz

! Average
DO psd(ic,iy,iz,ix) = ~ / nftot FOR ALL ic,iy,iz,ix

! Save to binary
IF has_terminal THEN WRITE "Saving to psd.bin"
IF NOT first THEN READ FROM prev
	psd_file = OPEN('psd.bin')
	WITH psd_file: psd_image = psd
	CLOSE psd_file
IF NOT last THEN WRITE TO next

! Be polite and say goodbye
WRITE "Goodbye, man!"
